
CREATE TABLE `query` (
  id bigint(20) NOT NULL AUTO_INCREMENT,
  `code` varchar(300) NOT NULL,
  details text NOT NULL,
  PRIMARY KEY (id)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1;

INSERT INTO query (id, code, details) VALUES
(1, 'get_list_of_districts', 'SELECT *, name AS value, name AS display FROM district ORDER BY name'),
(2, 'get_list_of_countries', 'SELECT *, name AS value, name AS display FROM country ORDER BY display_order DESC, name ASC'),
(3, 'add_person_data', 'INSERT INTO person (first_name, last_name, gender, marital_status, date_of_birth, date_added, citizenship_id, citizenship_type) \n\n(SELECT ''_FIRST_NAME_'' AS first_name, ''_LAST_NAME_'' AS last_name, ''_GENDER_'' AS gender, ''_MARITAL_STATUS_'' AS marital_status, ''_DATE_OF_BIRTH_'' AS date_of_birth, NOW() AS date_added, (SELECT id FROM country WHERE name=''_CITIZENSHIP_COUNTRY_'' LIMIT 1) AS citizenship_id, ''_CITIZENSHIP_TYPE_'' AS citizenship_type)'),
(4, 'add_contact_data', 'INSERT INTO contact (contact_type, carrier_id, details, parent_id, parent_type, date_added) VALUES (''_CONTACT_TYPE_'', ''_CARRIER_ID_'', ''_DETAILS_'', ''_PARENT_ID_'', ''_PARENT_TYPE_'', NOW())'),
(5, 'add_new_address', 'INSERT IGNORE INTO address (parent_id, parent_type, address_type, importance, details, county, district_id, country_id, date_added)\n\n(SELECT ''_PARENT_ID_'' AS parent_id, \n''_PARENT_TYPE_'' AS parent_type, \n''_ADDRESS_TYPE_'' AS address_type, \n''_IMPORTANCE_'' AS importance, \n''_DETAILS_'' AS details, \n ''_COUNTY_'' AS county,\nIF((SELECT id FROM district WHERE name=''_DISTRICT_'' LIMIT 1) IS NOT NULL, (SELECT id FROM district WHERE name=''_DISTRICT_'' LIMIT 1), ''_DISTRICT_'') AS district_id, \nIF((SELECT id FROM country WHERE name=''_COUNTRY_'' LIMIT 1) IS NOT NULL, (SELECT id FROM country WHERE name=''_COUNTRY_'' LIMIT 1), ''_COUNTRY_'') AS country_id,\nNOW() AS date_added\n)'),
(6, 'add_user_data', 'INSERT INTO user (person_id, 	login_name, login_password, permission_group_id, status, date_added, last_updated) \r\n\r\n(SELECT ''_PERSON_ID_'' AS person_id, ''_LOGIN_NAME_'' AS login_name, ''_LOGIN_PASSWORD_'' AS login_password, IF(''_PERMISSION_GROUP_''<>'''', (SELECT id FROM permission_group WHERE notes=''_PERMISSION_GROUP_'' LIMIT 1), '''') AS permission_group_id, ''_STATUS_'' AS status, NOW() AS date_added, NOW() AS last_updated)'),
(7, 'get_message_template', 'SELECT * FROM message WHERE message_type=''_MESSAGE_TYPE_'''),
(8, 'add_event_log', 'INSERT INTO log (log_code, result, details, date_added) VALUES (''_LOG_CODE_'', ''_RESULT_'', ''_DETAILS_'', NOW())'),
(9, 'update_person_profile_part', 'UPDATE person SET _QUERY_PART_ WHERE id=''_PERSON_ID_'''),
(10, 'update_person_citizenship', 'UPDATE person P LEFT JOIN country C ON (C.name=''_CITIZEN_COUNTRY_'') \r\nSET P.citizenship_id=C.id, P.citizenship_type=''_CITIZENSHIP_TYPE_'' WHERE P.id=''_PERSON_ID_'''),
(11, 'add_another_id', 'INSERT INTO other_user_id (parent_id, parent_type, id_type, id_value, date_added) \r\nVALUES \r\n(''_PARENT_ID_'', ''_PARENT_TYPE_'', ''_ID_TYPE_'', ''_ID_VALUE_'', NOW())\r\n\r\nON DUPLICATE KEY UPDATE \r\nid_value=VALUES(id_value),\r\ndate_added=VALUES(date_added)'),
(12, 'add_academic_history', 'INSERT IGNORE INTO academic_history (person_id, institution, institution_type, start_date, end_date, certificate_name, certificate_number, is_highest, date_added, added_by) VALUES (''_PERSON_ID_'', ''_INSTITUTION_'', ''_INSTITUTION_TYPE_'', ''_START_DATE_'', ''_END_DATE_'', ''_CERTIFICATE_NAME_'', ''_CERTIFICATE_NUMBER_'', ''_IS_HIGHEST_'', NOW(), ''_ADDED_BY_'')'),
(13, 'add_subject_data', 'INSERT INTO subject (details, study_category, parent_id, parent_type) VALUES (''_DETAILS_'', ''_STUDY_CATEGORY_'', ''_PARENT_ID_'', ''_PARENT_TYPE_'')'),
(14, 'remove_academic_history', 'DELETE FROM academic_history WHERE person_id=''_PERSON_ID_'''),
(15, 'remove_subject_data', 'DELETE FROM subject WHERE parent_id=''_PARENT_ID_'' AND parent_type=''_PARENT_TYPE_'''),
(16, 'update_person_data', 'UPDATE person SET first_name=''_FIRST_NAME_'', last_name=''_LAST_NAME_'', gender=''_GENDER_'', \r\nmarital_status=''_MARITAL_STATUS_'', date_of_birth=''_DATE_OF_BIRTH_'',\r\ncitizenship_id=(SELECT id FROM country WHERE name=''_CITIZENSHIP_COUNTRY_'' LIMIT 1),\r\ncitizenship_type=''_CITIZENSHIP_TYPE_'' \r\n\r\nWHERE id=''_PERSON_ID_'''),
(17, 'update_contact_data', 'UPDATE contact SET details=''_DETAILS_'', carrier_id=''_CARRIER_ID_''  WHERE contact_type=''_CONTACT_TYPE_'' AND parent_id=''_PARENT_ID_'' AND parent_type=''_PARENT_TYPE_'''),
(18, 'update_address_data', 'INSERT INTO address (parent_id, parent_type, address_type, importance, details, county, district_id, country_id, date_added)\r\n\r\n(SELECT ''_PARENT_ID_'' AS parent_id, \r\n''_PARENT_TYPE_'' AS parent_type, \r\n''_ADDRESS_TYPE_'' AS address_type, \r\n''_IMPORTANCE_'' AS importance, \r\n''_DETAILS_'' AS details, \r\n ''_COUNTY_'' AS county,\r\nIF((SELECT id FROM district WHERE name=''_DISTRICT_'' LIMIT 1) IS NOT NULL, (SELECT id FROM district WHERE name=''_DISTRICT_'' LIMIT 1), ''_DISTRICT_'') AS district_id, \r\nIF((SELECT id FROM country WHERE name=''_COUNTRY_'' LIMIT 1) IS NOT NULL, (SELECT id FROM country WHERE name=''_COUNTRY_'' LIMIT 1), ''_COUNTRY_'') AS country_id,\r\nNOW() AS date_added\r\n)\r\n\r\nON DUPLICATE KEY UPDATE\r\n\r\ndetails=VALUES(details), \r\naddress_type=VALUES(address_type),\r\ncounty=VALUES(county),\r\ndistrict_id=VALUES(district_id), \r\ncountry_id=VALUES(country_id)'),
(19, 'update_another_id', 'UPDATE other_user_id SET id_value=''_ID_VALUE_'' WHERE parent_id=''_PARENT_ID_'' AND parent_type=''_PARENT_TYPE_'' AND id_type=''_ID_TYPE_'''),
(20, 'record_message_exchange', 'INSERT INTO message_exchange (message_id, send_format, details, subject, attachment, date_added, sender, recipient_id)\r\n\r\n(SELECT M.id AS message_id, ''_SEND_FORMAT_'' AS send_format, ''_DETAILS_'' AS details, ''_SUBJECT_'' AS subject, ''_ATTACHMENT_'' AS attachment, NOW() AS date_added, ''_SENDER_'' AS sender, U.id AS recipient_id FROM message M LEFT JOIN user U ON (U.id IN (''_RECIPIENT_ID_'')) WHERE M.message_type=''_CODE_'')'),
(21, 'get_user_by_name_and_pass', 'SELECT U.*, P.first_name, P.last_name, P.gender, P.date_of_birth, P.signature, P.photo, PS.institution_id AS user_posting, PG.notes AS permission_group_name,\n\n(SELECT P.code FROM permission_group G LEFT JOIN permission P ON (G.default_permission=P.id) WHERE G.id=U.permission_group_id LIMIT 1) AS default_permission_code,\n\n(SELECT details FROM contact WHERE contact_type=''email'' AND parent_id=P.id AND parent_type=''person'' AND status=''active'' LIMIT 1) AS email_address,\n\nIF((SELECT details FROM contact WHERE contact_type=''telephone'' AND parent_id=P.id AND parent_type=''person'' AND status=''active'' LIMIT 1) IS NOT NULL, (SELECT details FROM contact WHERE contact_type=''telephone'' AND parent_id=P.id AND parent_type=''person'' AND status=''active'' LIMIT 1), '''') AS telephone \n\nFROM user U \nLEFT JOIN person P ON (U.person_id=P.id) \nLEFT JOIN permission_group PG ON (U.permission_group_id=PG.id) \nLEFT JOIN posting PS ON (PS.postee_id=U.id)\nWHERE login_name=''_LOGIN_NAME_'' AND login_password=''_LOGIN_PASSWORD_'' AND U.status=''active'''),
(22, 'get_user_by_email', 'SELECT U.id AS user_id, P.first_name, P.last_name \r\nFROM contact C LEFT JOIN person P ON (C.parent_id=P.id AND C.contact_type=''email'' AND C.parent_type=''person'') LEFT JOIN user U ON (U.person_id=P.id) \r\nWHERE C.details=''_EMAIL_ADDRESS_'''),
(23, 'get_group_permissions', 'SELECT P.code \r\nFROM permission_group_mapping M LEFT JOIN permission P ON (M.permission_id=P.id) \r\nWHERE M.group_id=''_GROUP_ID_'''),
(24, 'activate_teacher_applicant_user', 'UPDATE user SET status=''active'', last_updated=NOW(), permission_group_id=(SELECT id FROM permission_group WHERE name=''applicant'' LIMIT 1) WHERE person_id=''_PERSON_ID_'' AND permission_group_id='''''),
(25, 'get_user_by_id', 'SELECT *, id AS user_id FROM user WHERE id=''_USER_ID_'''),
(26, 'get_group_by_id', 'SELECT * FROM permission_group WHERE id=''_GROUP_ID_'''),
(27, 'get_group_default_permission', 'SELECT P.code, P.url AS page FROM permission_group G LEFT JOIN permission P ON (G.default_permission=P.id) WHERE G.id = ''_GROUP_ID_'' LIMIT 1'),
(28, 'get_permission_by_code', 'SELECT * FROM permission WHERE code=''_CODE_'''),
(29, 'get_permission_details', 'SELECT * FROM permission WHERE code IN (_PERMISSIONS_) AND status=''active'''),
(30, 'get_user_profile', 'SELECT U.id AS user_id, U.person_id, U.login_name, U.date_added, P.first_name, P.last_name, P.signature, P.photo,  \r\n\r\n(SELECT notes FROM permission_group WHERE id=U.permission_group_id LIMIT 1) AS user_role, \r\n \r\n(SELECT details FROM contact WHERE parent_id=U.person_id AND parent_type=''person'' AND contact_type=''email'' AND status=''active'' LIMIT 1) AS email_address, \r\n\r\n(SELECT details FROM contact WHERE parent_id=U.person_id AND parent_type=''person'' AND contact_type=''telephone'' AND status=''active'' LIMIT 1) AS telephone \r\n\r\nFROM user U LEFT JOIN person P ON (P.id=U.person_id) \r\nWHERE U.id=''_USER_ID_'''),
(31, 'update_user_password', 'UPDATE user SET login_password=''_NEW_PASSWORD_'', previous_password=''_OLD_PASSWORD_'', last_updated=NOW(), last_updated_by=''_UPDATED_BY_'' WHERE id=''_USER_ID_'''),
(32, 'get_list_of_institutions', 'SELECT *, name AS value, name AS display FROM institution WHERE _SEARCH_QUERY_ ORDER BY name LIMIT 100'),
(33, 'get_permission_groups', 'SELECT *, notes AS value, notes AS display FROM permission_group WHERE is_system_only IN (_SYSTEM_ONLY_) AND name NOT IN (''applicant'',''teacher'') ORDER BY notes'),
(34, 'add_vacancy_data', 'INSERT INTO vacancy (school_id, start_date, end_date, topic, summary, details, role_id, date_added, added_by, last_updated, last_updated_by)\r\n\r\n(SELECT \r\n(SELECT id FROM institution WHERE name=''_INSTITUTION_'' LIMIT 1) AS school_id, \r\n\r\n''_START_DATE_'' AS start_date, ''_END_DATE_'' AS end_date, ''_TOPIC_'' AS topic, ''_SUMMARY_'' AS summary, ''_DETAILS_'', \r\n\r\n(SELECT id FROM duty WHERE name=''_ROLE_'' LIMIT 1) AS role_id, \r\n\r\nNOW() AS date_added, ''_ADDED_BY_'' AS added_by, NOW() AS last_updated, ''_ADDED_BY_'' AS last_updated_by\r\n)'),
(35, 'update_vacancy_data', 'UPDATE vacancy SET topic=''_TOPIC_'', summary=''_SUMMARY_'', details=''_DETAILS_'', start_date=''_START_DATE_'', end_date=''_END_DATE_'', last_updated=NOW(), last_updated_by=''_UPDATED_BY_'' WHERE id=''_VACANCY_ID_'''),
(36, 'get_vacancy_list_data', 'SELECT V.id, V.start_date, V.end_date, V.topic, V.summary, V.status, I.name AS institution_name, D.name AS role_name \r\nFROM vacancy V LEFT JOIN institution I ON (V.school_id=I.id) LEFT JOIN duty D ON (V.role_id=D.id) \r\nWHERE _SEARCH_QUERY_ ORDER BY _ORDER_BY_ LIMIT _LIMIT_TEXT_;'),
(37, 'get_vacancy_by_id', 'SELECT V.*, I.name AS institution_name, D.name AS role_name \r\nFROM vacancy V LEFT JOIN institution I ON (V.school_id=I.id) LEFT JOIN duty D ON (V.role_id=D.id) \r\nWHERE V.id=''_VACANCY_ID_'';'),
(38, 'add_approval_chain', 'INSERT IGNORE INTO approval_chain (chain_type, step_number, subject_id, originator_id, approver_id, actual_approver, status, date_created, max_steps) \r\n\r\n(SELECT ''_CHAIN_TYPE_'' AS chain_type, ''_STEP_NUMBER_'' AS step_number, ''_SUBJECT_ID_'' AS subject_id, ''_ORIGINATOR_ID_'' AS originator_id, ''_APPROVER_ID_'' AS approver_id, ''_ACTUAL_APPROVER_'' AS actual_approver, ''_STATUS_'' AS status, NOW() AS date_created, S.max_steps AS max_steps FROM approval_chain_setting S WHERE S.chain_type=''_CHAIN_TYPE_'' AND S.step_number=''_STEP_NUMBER_'' LIMIT 1)'),
(39, 'get_approval_chain_setting', 'SELECT * FROM approval_chain_setting WHERE chain_type=''_CHAIN_TYPE_'' AND step_number=''_STEP_NUMBER_'''),
(40, 'get_approval_chain_by_id', 'SELECT C.*, \n(SELECT CONCAT(P1.last_name, '', '', P1.first_name) FROM approval_chain C1 LEFT JOIN user U1 ON (C1.step_number =''1'' AND C1.actual_approver = U1.id) LEFT JOIN person P1 ON (P1.id=U1.person_id) WHERE  C1.subject_id=C.subject_id AND C1.chain_type=C.chain_type LIMIT 1) AS originator_name, \n\nIF(C.actual_approver <> '''', (SELECT CONCAT(P2.last_name, '', '', P2.first_name) FROM user U2 LEFT JOIN person P2 ON (P2.id=U2.person_id) WHERE U2.id=C.actual_approver LIMIT 1), '''') AS approver_name \n\nFROM approval_chain C WHERE C.id=''_CHAIN_ID_'''),
(41, 'get_parties_in_chain', 'SELECT DISTINCT actual_approver	FROM approval_chain WHERE subject_id=''_SUBJECT_ID_'' AND chain_type=''_CHAIN_TYPE_'' AND status=''approved'''),
(42, 'get_originator_of_chain', 'SELECT actual_approver AS originator FROM approval_chain WHERE subject_id=''_SUBJECT_ID_'' AND step_number=''1'' AND chain_type=''_CHAIN_TYPE_'''),
(43, 'update_vacancy_status', 'UPDATE vacancy SET status=''_STATUS_'', last_updated=NOW(),last_updated_by=''_UPDATED_BY_'' WHERE id=''_VACANCY_ID_'''),
(44, 'deactivate_user_profile', 'UPDATE user SET status=''archived'', teacher_status=''archived'' WHERE id=''_USER_ID_'''),
(45, 'update_profile_visibility', 'UPDATE person SET is_visible=''_IS_VISIBLE_'' WHERE id=''_PERSON_ID_'''),
(46, 'activate_teacher_data', 'UPDATE user SET \r\n\r\npermission_group_id = (SELECT id FROM permission_group WHERE name=''teacher'' LIMIT 1), \r\nstatus=''active'', \r\nlast_updated=NOW(), last_updated_by=''_UPDATED_BY_'' \r\n\r\nWHERE id IN (_ID_LIST_)'),
(47, 'get_approver_scope', 'SELECT * FROM approval_chain_scope WHERE approver IN (_GROUP_LIST_)'),
(48, 'get_users_in_group', 'SELECT U.id, U.id AS user_id \r\nFROM user U \r\nLEFT JOIN permission_group G ON (G.id=U.permission_group_id) \r\nLEFT JOIN posting PT ON (U.id=PT.postee_id AND PT.status=''confirmed'' AND (posting_end_date=''0000-00-00'' OR posting_end_date > NOW())) \r\nLEFT JOIN institution I ON (PT.institution_id=I.id)\r\nLEFT JOIN address A ON (A.parent_type=''institution'' AND A.parent_id=I.id AND A.status IN (''active'',''verified''))\r\n\r\nWHERE G.name=''_GROUP_'' _CONDITION_'),
(49, 'get_originator_scope', 'SELECT U.id AS originator_id,\r\n\r\n(SELECT GROUP_CONCAT(PT.institution_id) FROM posting PT WHERE U.id=PT.postee_id AND PT.status IN (''pending'',''confirmed'',''verified'') AND PT.posting_end_date=''0000-00-00'') AS institutions,\r\n\r\n(SELECT IF(A.county <> '''' AND A.county IS NOT NULL, GROUP_CONCAT(A.county), IF(A.district_id <>'''', (SELECT GROUP_CONCAT(C.name) FROM county C WHERE C.district_id=A.district_id), '''')) \r\nFROM posting PT \r\nLEFT JOIN address A ON (A.parent_type=''institution'' AND A.parent_id=PT.institution_id AND A.status IN (''active'',''verified'')) WHERE U.id=PT.postee_id AND PT.status IN (''pending'',''confirmed'',''verified'') AND PT.posting_end_date=''0000-00-00'') AS counties,\r\n\r\n(SELECT GROUP_CONCAT(A.district_id) FROM posting PT \r\nLEFT JOIN address A ON (A.parent_type=''institution'' AND A.parent_id=PT.institution_id AND A.status IN (''active'',''verified'')) WHERE U.id=PT.postee_id AND PT.status IN (''pending'',''confirmed'',''verified'') AND PT.posting_end_date=''0000-00-00'') AS districts\r\n \r\nFROM user U \r\nWHERE U.id=''_ORIGINATOR_ID_'''),
(50, 'get_carrier_email_domain', 'SELECT IF(mms_email_domain <>'''', mms_email_domain, sms_email_domain) AS email_domain FROM carrier WHERE number_stubs LIKE ''_NUMBER_STUB_'' OR number_stubs LIKE ''_NUMBER_STUB_,%'' OR number_stubs LIKE ''%,_NUMBER_STUB_,%'' OR number_stubs LIKE ''%,_NUMBER_STUB_'''),
(51, 'get_step_chain', 'SELECT * FROM approval_chain WHERE chain_type=''_CHAIN_TYPE_'' AND step_number=''_STEP_NUMBER_'' AND subject_id=''_SUBJECT_ID_'''),
(52, 'get_user_list_data', 'SELECT U.*, P.first_name, P.last_name, CONCAT(P.last_name, '', '', P.first_name) AS display, CONCAT(P.last_name, '', '', P.first_name) AS value,\n\n(SELECT notes FROM permission_group WHERE id=U.permission_group_id LIMIT 1) AS user_role, \n \n(SELECT details FROM contact WHERE parent_id=U.person_id AND parent_type=''person'' AND contact_type=''email'' AND status=''active'' LIMIT 1) AS email_address, \n\n(SELECT details FROM contact WHERE parent_id=U.person_id AND parent_type=''person'' AND contact_type=''telephone'' AND status=''active'' LIMIT 1) AS telephone \n\nFROM user U \nJOIN person P ON (P.id=U.person_id) \nLEFT JOIN posting PS ON (PS.postee_id=U.id AND PS.posting_end_date=''0000-00-00'' AND PS.status=''verified'')\nWHERE _SEARCH_QUERY_ _ORDER_BY_ LIMIT _LIMIT_TEXT_'),
(53, 'update_user_status', 'UPDATE user SET status=''_STATUS_'', last_updated_by=''_UPDATED_BY_'', last_updated=NOW() WHERE id=''_USER_ID_'''),
(54, 'delete_user_data', 'DELETE U, P, A, C, M, S  \nFROM user U \nJOIN person P ON (U.person_id=P.id) \nLEFT JOIN address A ON (A.parent_type=''person'' AND A.parent_id=P.id) \nLEFT JOIN contact C ON (C.parent_type=''person'' AND C.parent_id=P.id) \nLEFT JOIN message_exchange M ON (M.recipient_id=U.id)\nLEFT JOIN message_status S ON (M.id=S.message_exchange_id) \n\nWHERE U.id=''_USER_ID_'''),
(55, 'update_user_permission_group', 'UPDATE user SET permission_group_id=(SELECT id  FROM permission_group WHERE notes=''_PERMISSION_GROUP_'' LIMIT 1), last_updated_by=''_UPDATED_BY_'', last_updated=NOW() WHERE id=''_USER_ID_'''),
(56, 'get_permission_list', 'SELECT *, display AS permission FROM permission WHERE _SEARCH_QUERY_ _ORDER_BY_ LIMIT _LIMIT_TEXT_'),
(57, 'get_permission_group_list', 'SELECT G.*, P.display, \nIF(G.is_system_only=''Y'', ''YES'', ''NO'') AS for_system, IF(last_updated <> ''0000-00-00 00:00:00'', last_updated, '''') AS last_update_date, \nIF(G.last_updated_by <> '''', (SELECT CONCAT(P.last_name,'', '',P.first_name) FROM user U LEFT JOIN person P ON (U.person_id=P.id) WHERE U.id=G.last_updated_by LIMIT 1), '''') AS last_updated_user\n\nFROM permission_group G LEFT JOIN permission P ON (P.id=G.default_permission) WHERE _SEARCH_QUERY_ _ORDER_BY_ LIMIT _LIMIT_TEXT_'),
(58, 'get_user_permission_list', 'SELECT CONCAT(P.last_name, '', '', P.first_name) AS user_name, G.id AS group_id, G.notes AS group_name, PM.display AS default_permission, IF(G.last_updated <> ''0000-00-00 00:00:00'', G.last_updated, '''') AS last_update_date \n\nFROM user U \nLEFT JOIN person P ON (U.person_id = P.id) \nLEFT JOIN permission_group G ON (G.id = U.permission_group_id) \nLEFT JOIN permission PM ON (G.default_permission = PM.id)\nWHERE U.status=''active'' AND _SEARCH_QUERY_ _ORDER_BY_ LIMIT _LIMIT_TEXT_'),
(59, 'get_group_permission_list', 'SELECT M.permission_id, P.category, P.display FROM permission_group_mapping M LEFT JOIN permission P ON (M.permission_id=P.id) WHERE M.group_id=''_GROUP_ID_'' ORDER BY P.category ASC '),
(60, 'add_permission_group', 'INSERT INTO permission_group (name, notes, default_permission, is_removable, is_system_only, date_added, added_by) VALUES (''_NAME_CODE_'', ''_GROUP_NAME_'', ''_DEFAULT_PERMISSION_'', ''Y'', ''_IS_SYSTEM_ONLY_'', NOW(), ''_ADDED_BY_'')'),
(61, 'add_group_permissions', 'INSERT INTO permission_group_mapping (group_id, permission_id, date_added, added_by) \r\n(SELECT ''_GROUP_ID_'' AS group_id, P.id AS permission_id, NOW() AS date_added, ''_ADDED_BY_'' AS added_by FROM permission P WHERE P.id IN (_PERMISSION_IDS_))'),
(62, 'remove_group_permissions', 'DELETE FROM permission_group_mapping WHERE group_id=''_GROUP_ID_'''),
(63, 'update_permission_group', 'UPDATE permission_group SET default_permission=''_DEFAULT_PERMISSION_'', last_updated=NOW(), last_updated_by=''_UPDATED_BY_'' WHERE id=''_GROUP_ID_'''),
(64, 'delete_permission_group_data', 'DELETE G, M FROM permission_group G LEFT JOIN permission_group_mapping M ON ( M.group_id = G.id ) WHERE G.id=''_GROUP_ID_'''),
(65, 'get_active_users', 'SELECT * FROM user WHERE status=''active'''),
(66, 'get_user_names_by_list', 'SELECT CONCAT(P.last_name,'', '', P.first_name) AS name FROM user U LEFT JOIN person P ON (U.person_id=P.id) WHERE U.id IN (_USER_IDS_) _LIMIT_FULL_TEXT_'),
(67, 'get_message_list', 'SELECT M.*, \nCONCAT(P.last_name, '', '', P.first_name) AS name,\n\nIF((SELECT status FROM message_status WHERE message_exchange_id=M.id AND user_id=M.recipient_id ORDER BY date_added DESC LIMIT 1) IS NOT NULL, (SELECT status FROM message_status WHERE message_exchange_id=M.id AND user_id=M.recipient_id ORDER BY date_added DESC LIMIT 1), ''received'') AS status,\n\nM.date_added AS date_sent \n\nFROM message_exchange M \nLEFT JOIN contact C ON (C.contact_type=''email'' AND C.details=M.sender AND C.parent_type=''person'') \nLEFT JOIN person P ON (C.parent_id=P.id)\n\nWHERE M.recipient_id=''_RECIPIENT_ID_'' _SEARCH_QUERY_ _ORDER_BY_ LIMIT _LIMIT_TEXT_'),
(68, 'get_sent_message_list', 'SELECT M.*, \nCONCAT(P.last_name, '', '', P.first_name) AS name,\n\nIF((SELECT status FROM message_status WHERE message_exchange_id=M.id AND user_id=M.recipient_id ORDER BY date_added DESC LIMIT 1) IS NOT NULL, (SELECT status FROM message_status WHERE message_exchange_id=M.id AND user_id=M.recipient_id ORDER BY date_added DESC LIMIT 1), ''received'') AS status,\n\nM.date_added AS date_sent \n\nFROM message_exchange M \nLEFT JOIN user U ON (U.id=M.recipient_id)\nLEFT JOIN person P ON (U.person_id=P.id) \n\nWHERE M.sender=''_SENDER_EMAIL_'' _SEARCH_QUERY_ _ORDER_BY_ LIMIT _LIMIT_TEXT_'),
(69, 'add_message_status', 'INSERT INTO message_status \r\n(message_exchange_id, user_id, status, date_added) VALUES \r\n(''_MESSAGE_EXCHANGE_ID_'', ''_USER_ID_'', ''_STATUS_'', NOW()) ON DUPLICATE KEY UPDATE date_added=VALUES(date_added)'),
(70, 'get_message_by_id', 'SELECT M.*, \nCONCAT(P.last_name, '', '', P.first_name) AS sender_name,\n\n(SELECT CONCAT(P1.last_name,'' '', P1.first_name) FROM user U1 LEFT JOIN person P1 ON (U1.person_id=P1.id) WHERE U1.id=M.recipient_id) AS recipient_name,\n\nIF((SELECT status FROM message_status WHERE message_exchange_id=M.id ORDER BY date_added DESC LIMIT 1) IS NOT NULL, (SELECT status FROM message_status WHERE message_exchange_id=M.id ORDER BY date_added DESC LIMIT 1), ''received'') AS status,\n\nM.date_added AS date_sent,\nU.id AS sender_id\n\nFROM message_exchange M \nLEFT JOIN contact C ON (C.contact_type=''email'' AND C.details=M.sender AND C.parent_type=''person'') \nLEFT JOIN person P ON (C.parent_id=P.id)\nLEFT JOIN user U ON (U.person_id=C.parent_id AND U.login_name=M.sender)\n\nWHERE M.id=''_MESSAGE_ID_'''),
(71, 'activate_school_data', 'UPDATE institution SET \r\n\r\nstatus=''verified'', \r\nlast_updated=NOW(), last_updated_by=''_UPDATED_BY_'' \r\n\r\nWHERE id IN (_ID_LIST_)'),
(72, 'activate_census_data', 'UPDATE census SET \r\nstatus=''active'', \r\nlast_updated=NOW(), last_updated_by=''_UPDATED_BY_'' \r\nWHERE id IN (_ID_LIST_)'),
(73, 'get_school_by_id', 'SELECT S.*, \nS.start_date AS date_registered, \nA.details AS addressline, \nA.county AS county,\n\nIF((SELECT name FROM district WHERE id=A.district_id LIMIT 1) IS NOT NULL, (SELECT name FROM district WHERE id=A.district_id LIMIT 1), A.district_id) AS district,\n\nIF((SELECT name FROM country WHERE id=A.country_id LIMIT 1) IS NOT NULL, (SELECT name FROM country WHERE id=A.country_id LIMIT 1), A.country_id) AS country,\n\nC1.details AS email_address, \nC2.details AS telephone\n\nFROM institution S \nLEFT JOIN address A ON (A.parent_id=S.id AND A.parent_type=''school'' AND A.is_primary=''Y'') \nLEFT JOIN contact C1 ON (C1.parent_id=S.id AND C1.parent_type=''school'' AND C1.is_primary=''Y'' AND C1.contact_type=''email'') \nLEFT JOIN contact C2 ON (C2.parent_id=S.id AND C2.parent_type=''school'' AND C2.is_primary=''Y'' AND C2.contact_type=''telephone'') \nWHERE S.id=''_SCHOOL_ID_'''),
(74, 'get_school_list_data', 'SELECT S.*, \nS.start_date AS date_registered, \nA.details AS addressline, \nA.county AS county,\n\nIF((SELECT name FROM district WHERE id=A.district_id LIMIT 1) IS NOT NULL, (SELECT name FROM district WHERE id=A.district_id LIMIT 1), A.district_id) AS district,\n\nIF((SELECT name FROM country WHERE id=A.country_id LIMIT 1) IS NOT NULL, (SELECT name FROM country WHERE id=A.country_id LIMIT 1), A.country_id) AS country,\n\n(SELECT C1.details FROM contact C1 WHERE C1.parent_id = S.id AND C1.parent_type = ''school'' AND C1.is_primary = ''Y'' AND C1.contact_type = ''email'' LIMIT 1) AS email_address,\n\n(SELECT C2.details FROM contact C2 WHERE C2.parent_id = S.id AND C2.parent_type = ''school'' AND C2.is_primary = ''Y'' AND C2.contact_type = ''telephone'' LIMIT 1) AS telephone\n\nFROM institution S \nJOIN address A ON (A.parent_id=S.id AND A.parent_type=''school'' AND A.is_primary=''Y'')  \nWHERE _SEARCH_QUERY_ ORDER BY _ORDER_BY_ LIMIT _LIMIT_TEXT_'),
(75, 'add_school_data', 'INSERT INTO institution (name, start_date, end_date, school_type, date_added, added_by, last_updated, last_updated_by) VALUES (''_NAME_'', ''_START_DATE_'', ''0000-00-00'', ''_SCHOOL_TYPE_'', NOW(), ''_ADDED_BY_'', NOW(), ''_ADDED_BY_'')'),
(76, 'update_item_status', 'UPDATE _TABLE_NAME_ SET status=''_STATUS_'', last_updated_by=''_UPDATED_BY_'', last_updated=NOW() WHERE id=''_ITEM_ID_'''),
(77, 'delete_school_data', 'DELETE S, A, C FROM institution S LEFT JOIN address A ON (A.parent_id=S.id AND A.parent_type=''school'') LEFT JOIN contact C ON (C.parent_id=S.id AND C.parent_type=''school'') WHERE S.id=''_SCHOOL_ID_'' '),
(78, 'get_responsibility_list', 'SELECT *, notes AS responsibility FROM responsibility ORDER BY notes ASC'),
(79, 'get_training_list', 'SELECT *, notes AS training FROM training ORDER BY type ASC, notes ASC'),
(80, 'get_census_list', 'SELECT C.*, CONCAT(P.last_name, '', '', P.first_name) AS teacher_name FROM census C LEFT JOIN user U ON (U.id=C.teacher_id) LEFT JOIN person P ON (P.id=U.person_id) \nWHERE _SEARCH_QUERY_ ORDER BY _ORDER_BY_ LIMIT _LIMIT_TEXT_'),
(81, 'add_census_data', 'INSERT INTO census (teacher_id, start_date, end_date, weekly_workload_average, added_by, date_added) VALUES (''_TEACHER_ID_'', ''_START_DATE_'', ''_END_DATE_'', ''_WEEKLY_WORKLOAD_AVERAGE_'', ''_ADDED_BY_'', NOW())'),
(82, 'add_census_responsibility', 'INSERT INTO census_responsibility (census_id, responsibility_id) \r\n(SELECT ''_CENSUS_ID_'' AS census_id, R.id AS responsibility_id FROM responsibility R WHERE R.id IN (_RESPONSIBILITY_IDS_))'),
(83, 'add_census_training', 'INSERT INTO census_training (census_id, training_id) \r\n(SELECT ''_CENSUS_ID_'' AS census_id, T.id AS training_id FROM training T WHERE T.id IN (_TRAINING_IDS_))'),
(84, 'remove_census_responsibility', 'DELETE FROM census_responsibility WHERE census_id=''_CENSUS_ID_'''),
(85, 'remove_census_training', 'DELETE FROM census_training WHERE census_id=''_CENSUS_ID_'''),
(86, 'get_census_responsibility_list', 'SELECT responsibility_id FROM census_responsibility WHERE census_id=''_CENSUS_ID_'''),
(87, 'get_census_training_list', 'SELECT training_id FROM census_training WHERE census_id=''_CENSUS_ID_'''),
(88, 'delete_census_data', 'DELETE C, R, T FROM \r\ncensus C \r\nLEFT JOIN census_responsibility R ON (R.census_id=C.id) \r\nLEFT JOIN census_training T ON (T.census_id=C.id) \r\nWHERE C.id = ''_CENSUS_ID_'''),
(89, 'get_census_training', 'SELECT C.*, T.code, T.notes AS training, T.type FROM census_training C LEFT JOIN training T ON (C.training_id=T.id) WHERE C.census_id=''_CENSUS_ID_'''),
(90, 'get_census_responsibility', 'SELECT C.*, R.code, R.notes AS responsibility FROM census_responsibility C LEFT JOIN responsibility R ON (C.responsibility_id=R.id) WHERE C.census_id=''_CENSUS_ID_'''),
(91, 'update_teacher_status', 'UPDATE user SET teacher_status=''_STATUS_'', last_updated=NOW(), last_updated_by=''_UPDATED_BY_'' WHERE id=''_USER_ID_'''),
(92, 'get_teacher_list_data', 'SELECT U.*, P.first_name, P.last_name, CONCAT(P.last_name, '', '', P.first_name) AS name, \n\nIF(P.date_of_birth <> ''0000-00-00'', TIMESTAMPDIFF(YEAR, P.date_of_birth, CURDATE()), ''Unknown'') AS age, \n\n(SELECT I.name FROM posting P LEFT JOIN institution I ON (P.institution_id=I.id) WHERE P.postee_id=U.id ORDER BY P.posting_start_date DESC LIMIT 1) AS school,\n\n(SELECT CONCAT(A.details, '' '', A.county, '' '', (SELECT name FROM district WHERE id=A.district_id LIMIT 1), '', '', (SELECT name FROM country WHERE id=A.country_id LIMIT 1)) FROM posting P LEFT JOIN institution I ON (P.institution_id=I.id) LEFT JOIN address A ON (A.parent_id=I.id AND A.parent_type=''school'') WHERE P.postee_id=U.id ORDER BY P.posting_start_date DESC LIMIT 1) AS school_address, \n \n(SELECT details FROM contact WHERE parent_id=U.person_id AND parent_type=''person'' AND contact_type=''email'' AND is_primary=''Y'' LIMIT 1) AS email_address, \n\n(SELECT details FROM contact WHERE parent_id=U.person_id AND parent_type=''person'' AND contact_type=''telephone'' AND is_primary=''Y'' LIMIT 1) AS telephone \n\nFROM user U LEFT JOIN person P ON (P.id=U.person_id) WHERE (U.permission_group_id=''2'' OR U.permission_group_id = ''1'') AND _SEARCH_QUERY_ _ORDER_BY_ LIMIT _LIMIT_TEXT_'),
(93, 'get_teacher_education', 'SELECT id AS education_id, institution_type AS institution__institutiontype, institution AS institutionname, certificate_name AS certificatename, MONTHNAME(start_date) AS from__month, YEAR(start_date) AS from__pastyear, MONTHNAME(end_date) AS to__month, YEAR(end_date) AS to__pastyear, certificate_number AS certificatenumber, is_highest AS highestcertificate FROM academic_history WHERE person_id=''_PERSON_ID_'''),
(94, 'get_teacher_subjects', 'SELECT id AS subject_id, details AS subjectname, study_category AS subject__subjecttype  FROM subject WHERE parent_id=''_PERSON_ID_'' AND parent_type=''person'''),
(95, 'get_teacher_profile', 'SELECT U.id AS teacher_id, U.person_id, P.first_name, P.last_name, CONCAT(P.last_name, '', '', P.first_name) AS name, \n\n(SELECT details FROM contact WHERE parent_id=U.person_id AND parent_type=''person'' AND contact_type=''telephone'' AND \n\nis_primary=''Y'' LIMIT 1) AS telephone, \n\n(SELECT details FROM contact WHERE parent_id=U.person_id AND parent_type=''person'' AND contact_type=''email'' AND is_primary=''Y'' LIMIT 1) AS email_address, \n\nP.gender, P.marital_status, P.date_of_birth, P.photo, \n\nA1.details AS birthplace__addressline, \nA1.county AS birthplace__county, \n(SELECT name FROM district WHERE id=A1.district_id LIMIT 1) AS birthplace__district, \n(SELECT name FROM country WHERE id=A1.country_id LIMIT 1) AS birthplace__country, \nA1.address_type AS birthplace__addresstype, \n\n(SELECT id_value FROM other_user_id WHERE parent_id=U.person_id AND parent_type=''person'' AND id_type=''teacher_id'' LIMIT 1) AS teacher_id,\n\nA2.details AS permanentaddress__addressline, \nA2.county AS permanentaddress__county, \n(SELECT name FROM district WHERE id=A2.district_id LIMIT 1) AS permanentaddress__district, \n(SELECT name FROM country WHERE id=A2.country_id LIMIT 1) AS permanentaddress__country, \nA2.address_type AS permanentaddress__addresstype, \n\nA3.details AS contactaddress__addressline, \nA3.county AS contactaddress__county, \n(SELECT name FROM district WHERE id=A3.district_id LIMIT 1) AS contactaddress__district, \n(SELECT name FROM country WHERE id=A3.country_id LIMIT 1) AS contactaddress__country, \nA3.address_type AS contactaddress__addresstype, \n\n(SELECT name FROM country WHERE id=P.citizenship_id LIMIT 1) AS citizenship__country,\nP.citizenship_type AS citizenship__type\n\nFROM user U \nLEFT JOIN person P ON (P.id=U.person_id) \nLEFT JOIN address A1 ON (A1.parent_id=U.person_id AND A1.parent_type=''person'' AND A1.importance=''birthplace'')\nLEFT JOIN address A2 ON (A2.parent_id=U.person_id AND A2.parent_type=''person'' AND A2.importance=''permanent'')\nLEFT JOIN address A3 ON (A3.parent_id=U.person_id AND A3.parent_type=''person'' AND A3.importance=''contact'')\n\nWHERE U.id=''_TEACHER_ID_'''),
(96, 'get_teacher_grades', 'SELECT name AS value, name AS display FROM grade ORDER BY number'),
(97, 'get_grade_details_by_name', 'SELECT * FROM grade WHERE name=''_GRADE_NAME_'''),
(98, 'add_job_application', 'INSERT IGNORE INTO application (vacancy_id, status, user_id, date_added, added_by, 	last_updated, last_updated_by) VALUES \r\n(''_VACANCY_ID_'', ''_STATUS_'', ''_USER_ID_'', NOW(), ''_ADDED_BY_'', NOW(), ''_ADDED_BY_'')'),
(99, 'get_job_parties', '(SELECT ''_APPLICANT_'' AS user_id) \r\nUNION \r\n(SELECT id AS user_id FROM user WHERE permission_group_id=''10'') \r\nUNION \r\n(SELECT U.id AS user_id FROM user U LEFT JOIN vacancy V ON (V.added_by=U.id OR V.last_updated_by=U.id) WHERE V.id=''_VACANCY_ID_'')'),
(100, 'get_job_applications', 'SELECT DISTINCT \nA.id AS application_id, \nA.status AS application_status, \nA.date_added AS submission_date, \nA.user_id AS applicant_id, \n\n(SELECT CONCAT(P.last_name, '', '', P.first_name) FROM user U LEFT JOIN person P ON (U.person_id=P.id) WHERE U.id=A.user_id LIMIT 1) AS applicant_name, \n\nIF((SELECT id FROM recommendation WHERE recommended_by=''_VIEWED_BY_'' AND change_application_id=A.id AND application_type=''job'' LIMIT 1) IS NOT NULL, ''Y'', ''N'') AS has_recommended, \n\n(SELECT COUNT(id) FROM recommendation WHERE change_application_id=A.id AND application_type=''job'') AS recommendation_count,\n\nV.id, V.start_date, V.end_date, V.topic, V.summary, V.status, \nI.name AS institution_name, \nD.name AS role_name \n\nFROM application A \nLEFT JOIN vacancy V ON (A.vacancy_id=V.id) \nLEFT JOIN institution I ON (V.school_id=I.id) \nLEFT JOIN duty D ON (V.role_id=D.id) \nLEFT JOIN posting PS ON (PS.postee_id=A.user_id)\n\nWHERE _SEARCH_QUERY_ \nORDER BY _ORDER_BY_ LIMIT _LIMIT_TEXT_;'),
(101, 'save_user_job', 'INSERT IGNORE INTO saved_vacancies (user_id, vacancy_id, date_added) VALUES (''_USER_ID_'', ''_VACANCY_ID_'', NOW())'),
(102, 'remove_user_job', 'DELETE FROM saved_vacancies WHERE user_id=''_USER_ID_'' AND vacancy_id=''_VACANCY_ID_'''),
(103, 'get_saved_jobs', 'SELECT * FROM saved_vacancies WHERE user_id=''_USER_ID_'''),
(104, 'get_interview_vacancies', 'SELECT \nI2.id,\nV.topic AS job, \nV.id AS job_id, \n(SELECT COUNT(id) FROM note WHERE parent_id=I2.id AND parent_type=''interview'') AS note_count, \nCONCAT(P.last_name, '', '', P.first_name) AS applicant,\n(SELECT CONCAT(P2.last_name, '' '', P2.first_name) FROM user U2 LEFT JOIN person P2 ON (P2.id=U2.person_id) WHERE U2.id=I2.interviewer_id) AS interviewer, \nI2.board_id,\nI2.interview_date,\nI2.interview_duration,\nI2.result,\nI2.notes, \nA.user_id AS applicant_id\n\nFROM interview I2 \nLEFT JOIN application A ON (I2.application_id=A.id) \nLEFT JOIN vacancy V ON (A.vacancy_id=V.id) \nLEFT JOIN institution I ON (I.id=V.school_id)\n\nLEFT JOIN user U ON (U.id=A.user_id)\nLEFT JOIN person P ON (U.person_id=P.id)\n\nWHERE _SEARCH_QUERY_ ORDER BY _ORDER_BY_ LIMIT _LIMIT_TEXT_'),
(105, 'add_recommendation', 'INSERT IGNORE INTO recommendation (change_application_id, application_type, recommended_by, notes, date_added, added_by) VALUES (''_CHANGE_APPLICATION_ID_'', ''_APPLICATION_TYPE_'', ''_RECOMMENDED_BY_'', ''_NOTES_'', NOW(), ''_ADDED_BY_'')'),
(106, 'get_application_recommendations', 'SELECT R.*, CONCAT(P.last_name, '', '', P.first_name) AS recommender, (SELECT name FROM institution WHERE id=PS.institution_id LIMIT 1) AS recommender_school, (SELECT name FROM duty WHERE id=PS.role_id LIMIT 1) AS recommender_role FROM recommendation R LEFT JOIN user U ON (R.recommended_by=U.id) LEFT JOIN person P ON (U.person_id=P.id) LEFT JOIN posting PS ON (PS.postee_id=R.recommended_by AND PS.posting_end_date=''0000-00-00'') WHERE R.change_application_id=''_APPLICATION_ID_'' AND application_type=''_APPLICATION_TYPE_'' ORDER BY R.date_added DESC'),
(107, 'get_user_posting', 'SELECT institution_id FROM posting WHERE postee_id=''_USER_ID_'' AND status <> ''reversed'''),
(108, 'add_interview', 'INSERT INTO interview (application_id, interviewer_id, planned_date, interview_date, notes, date_added, added_by, last_updated, last_updated_by) VALUES \r\n\r\n(''_APPLICATION_ID_'', ''_INTERVIEWER_ID_'', ''_PLANNED_DATE_'', ''_PLANNED_DATE_'', ''_NOTES_'', NOW(), ''_ADDED_BY_'', NOW(), ''_ADDED_BY_'')'),
(109, 'get_simple_application_details', 'SELECT * FROM application WHERE id=''_APPLICATION_ID_'''),
(110, 'add_note', 'INSERT INTO note (parent_id, parent_type, details, date_added, added_by) VALUES \r\n(''_PARENT_ID_'', ''_PARENT_TYPE_'', ''_DETAILS_'', NOW(), ''_ADDED_BY_'')'),
(111, 'get_item_notes', 'SELECT N.id, CONCAT(P.last_name, '', '', P.first_name) AS added_by, N.details, N.date_added FROM note N LEFT JOIN user U ON (N.added_by=U.id) LEFT JOIN person P ON (U.person_id=P.id) \n\nWHERE N.parent_id=''_ITEM_ID_'' AND N.parent_type=''_ITEM_TYPE_'' \nORDER BY N.date_added DESC'),
(112, 'get_shortlist_data', 'SELECT DISTINCT shortlist_name AS value, shortlist_name AS display FROM shortlist WHERE _SEARCH_QUERY_ _ORDER_BY_ LIMIT _LIMIT_TEXT_'),
(113, 'update_interview_data', 'UPDATE interview SET interview_date=''_INTERVIEW_DATE_'', interview_duration=''_INTERVIEW_DURATION_'', result=''_RESULT_'', last_updated=NOW(), last_updated_by=''_UPDATED_BY_'' WHERE id=''_INTERVIEW_ID_'''),
(114, 'add_user_to_shortlist', 'INSERT IGNORE INTO shortlist (shortlist_name, vacancy_id, applicant_id, date_added, added_by) VALUES \r\n(''_SHORTLIST_NAME_'', ''_VACANCY_ID_'', ''_APPLICANT_ID_'', NOW(), ''_ADDED_BY_'')'),
(115, 'remove_interview_details', 'DELETE I, N FROM interview I LEFT JOIN note N ON (N.parent_id=I.id AND N.parent_type=''interview'') WHERE I.id=''_INTERVIEW_ID_'''),
(116, 'get_interview_shortlists', 'SELECT  DISTINCT S.vacancy_id,  S.vacancy_id AS id, S.shortlist_name, V.topic AS job, I.name AS institution_name \nFROM shortlist S \nLEFT JOIN vacancy V ON (V.id=S.vacancy_id) \nLEFT JOIN institution I ON (I.id=V.school_id) \nLEFT JOIN user U ON (U.id=S.applicant_id) \nLEFT JOIN person P ON (U.person_id=P.id)\n\nWHERE _SEARCH_QUERY_ ORDER BY _ORDER_BY_ LIMIT _LIMIT_TEXT_'),
(117, 'get_shortlist_details', 'SELECT S.id AS shortlist_id, S.date_added, \n\n(SELECT CONCAT(P.last_name, '', '', P.first_name) \nFROM user U JOIN person P ON (P.id=U.person_id) \nWHERE U.id=S.applicant_id LIMIT 1) AS name, \n\n(SELECT P.file_number FROM user U JOIN person P ON (P.id=U.person_id) \nWHERE U.id=S.applicant_id LIMIT 1) AS number, \n\n(SELECT CONCAT(A.details, '' '', A.county, '' '', (SELECT name FROM district WHERE id=A.district_id LIMIT 1), '', '', (SELECT name FROM country WHERE id=A.country_id LIMIT 1)) FROM user U LEFT JOIN address A ON (A.parent_id=U.person_id AND A.parent_type=''person'' AND A.importance=''contact'') WHERE U.id=S.applicant_id LIMIT 1) AS address, \n\n(SELECT CONCAT(V.topic, '' AT '', (SELECT name FROM institution WHERE id=V.school_id)) FROM vacancy V WHERE V.id=S.vacancy_id) AS post_applied\n\nFROM shortlist S \nWHERE S.vacancy_id=''_VACANCY_ID_'' AND S.shortlist_name=''_SHORTLIST_NAME_'' \nORDER BY name ASC'),
(118, 'get_duties', 'SELECT *, name AS value, name AS display FROM duty ORDER BY name ASC'),
(119, 'get_managers_for_user', 'SELECT U2.id AS user_id \r\nFROM user U1 \r\nLEFT JOIN posting P1 ON (P1.postee_id=U1.id)\r\nLEFT JOIN posting P2 ON (P2.institution_id=P1.institution_id)\r\nLEFT JOIN user U2 ON (P2.postee_id=U2.id AND U2.permission_group_id=''3'')\r\n\r\nWHERE U2.id IS NOT NULL AND U1.id=''_TEACHER_ID_'''),
(120, 'get_caos_for_user', 'SELECT U2.id AS user_id \r\n\r\nFROM user U1 \r\nLEFT JOIN address A1 ON (U1.person_id=A1.parent_id AND A1.parent_type=''person'' AND A1.importance=''contact'') \r\nLEFT JOIN address A2 ON (((A2.county <> '''' AND A2.county=A1.county) OR (A2.county = '''' AND A2.district_id=A1.district_id)) AND A2.importance=''contact'') \r\nLEFT JOIN user U2 ON (U2.person_id=A2.parent_id AND A2.parent_type=''person'' AND U2.permission_group_id=''12'') \r\n\r\nWHERE U2.id IS NOT NULL AND U1.id=''_TEACHER_ID_'''),
(121, 'add_posting_data', 'INSERT INTO posting (postee_id, institution_id, posting_start_date, posting_end_date, notes, role_id, final_interview_id, status, date_added, added_by, last_updated, last_updated_by)\r\n\r\n(SELECT ''_POSTEE_ID_'' AS postee_id, school_id AS institution_id, NOW() AS posting_start_date, ''0000-00-00'' AS posting_end_date, ''_NOTES_'' AS notes, role_id AS role_id, ''_FINAL_INTERVIEW_ID_'' AS final_interview_id, ''_STATUS_'' AS status, NOW() AS date_added, ''_ADDED_BY_'' AS added_by, NOW() AS last_updated, ''_ADDED_BY_'' AS last_updated_by FROM vacancy WHERE id=''_VACANCY_ID_'')'),
(122, 'get_user_address', 'SELECT A.*, A.details AS addressline, \r\nA.county, \r\n\r\nIF((SELECT name FROM district WHERE id=A.district_id LIMIT 1) IS NOT NULL, (SELECT name FROM district WHERE id=A.district_id LIMIT 1), A.district_id) AS district, \r\n\r\n(SELECT name FROM country WHERE id=A.country_id) AS country \r\n\r\nFROM user U \r\nLEFT JOIN address A ON (A.parent_id=U.person_id AND A.parent_type=''person'' AND importance=''_ADDRESS_TYPE_'')\r\nWHERE A.id IS NOT NULL AND U.id=''_USER_ID_'''),
(123, 'get_job_postings', 'SELECT DISTINCT P.id, P.postee_id, P.final_interview_id, P1.file_number,  P.applied_for_confirmation, P.role_id, P.final_interview_id, P.last_updated_by, \nCONCAT(P1.last_name, '', '', P1.first_name) AS teacher_name, \nD.name AS job, D.description AS job_description, I.name AS institution_name, P.date_added AS award_date, P.posting_start_date AS start_date, P.status AS confirmation_status\n\nFROM posting P \nLEFT JOIN user U ON (U.id = P.postee_id) \nLEFT JOIN person P1 ON (P1.id = U.person_id) \nLEFT JOIN duty D ON (D.id = P.role_id) \nLEFT JOIN institution I ON (I.id = P.institution_id) \nLEFT JOIN address A ON (A.parent_id=I.id AND A.parent_type=''school'')\n\nWHERE _SEARCH_QUERY_ ORDER BY _ORDER_BY_ LIMIT _LIMIT_TEXT_\n'),
(124, 'change_posting_field', 'UPDATE posting SET _FIELD_NAME_=''_FIELD_VALUE_'', last_updated=NOW(), last_updated_by=''_UPDATED_BY_'' WHERE id=''_POSTING_ID_'''),
(125, 'remove_posting_data', 'DELETE FROM posting WHERE id=''_POSTING_ID_'''),
(126, 'update_interview_part', 'UPDATE interview SET _FIELD_NAME_=''_FIELD_VALUE_'', last_updated=NOW(), last_updated_by=''_UPDATED_BY_'' WHERE id=''_INTERVIEW_ID_'''),
(127, 'submit_confirmation_request', 'UPDATE posting SET applied_for_confirmation=''Y'' WHERE id=''_POSTING_ID_'''),
(128, 'get_teacher_jobs', 'SELECT (SELECT name FROM duty WHERE id=P.role_id LIMIT 1) AS job, \r\nI.name AS school, \r\nP.institution_id, \r\nA.details AS addressline, \r\nA.county, \r\n\r\nIF((SELECT name FROM district WHERE id=A.district_id LIMIT 1) IS NOT NULL, (SELECT name FROM district WHERE id=A.district_id LIMIT 1), A.district_id) AS district, \r\n\r\n(SELECT name FROM country WHERE id=A.country_id) AS country, \r\n\r\nP.posting_start_date AS startdate,\r\nP.posting_end_date AS enddate\r\n\r\nFROM posting P \r\nLEFT JOIN institution I ON (I.id=P.institution_id)\r\nLEFT JOIN address A ON (A.parent_id=I.id AND A.parent_type=''school'')\r\n\r\nWHERE P.postee_id=''_USER_ID_'' _SEARCH_CONDITION_'),
(129, 'get_previous_schools', 'SELECT DISTINCT \nI.name AS school, \nA.details AS addressline, \nA.county, \n\nIF((SELECT name FROM district WHERE id=A.district_id LIMIT 1) IS NOT NULL, (SELECT name FROM district WHERE id=A.district_id LIMIT 1), A.district_id) AS district, \n\n(SELECT name FROM country WHERE id=A.country_id) AS country, \n\n(SELECT GROUP_CONCAT(D.name SEPARATOR '', '') FROM duty D WHERE D.id IN (SELECT role_id FROM posting WHERE institution_id=P.institution_id AND postee_id=''_USER_ID_'')) AS jobs, \n\n(SELECT MIN(P1.posting_start_date) FROM posting P1 WHERE P1.institution_id=P.institution_id AND P1.status NOT IN (''saved'', ''reversed'') AND P1.postee_id=''_USER_ID_'') AS startdate,\n\n(SELECT MIN(P2.posting_end_date) FROM posting P2 WHERE P2.institution_id=P.institution_id AND P2.status NOT IN (''saved'', ''reversed'') AND P2.postee_id=''_USER_ID_'') AS enddate\n\nFROM posting P \nLEFT JOIN institution I ON (I.id=P.institution_id)\nLEFT JOIN address A ON (A.parent_id=I.id AND A.parent_type=''school'')\n\nWHERE P.postee_id=''_USER_ID_'' AND P.posting_end_date <> ''0000-00-00'''),
(130, 'add_retirement_application', 'INSERT INTO retirement (retiree_id, retiree_reason, proposed_date, date_added, added_by, last_updated, last_updated_by) VALUES \r\n(''_RETIREE_ID_'', ''_RETIREE_REASON_'', ''_PROPOSED_DATE_'', NOW(), ''_ADDED_BY_'', NOW(), ''_ADDED_BY_'')'),
(131, 'get_retirement_application', 'SELECT R.*, CONCAT(P.last_name, '', '', P.first_name) AS retiree_name \nFROM retirement R \nLEFT JOIN user U ON (U.id=R.retiree_id) \nLEFT JOIN person P ON (P.id=U.person_id)\n\nWHERE R.id=''_APPLICATION_ID_'''),
(132, 'add_promotion_application', 'INSERT INTO promotion (vacancy_id, current_posting_id, reason, proposed_promotion_date, added_by, added_on, last_updated_by, last_updated_on)  \r\n\r\n(SELECT ''_VACANCY_ID_'' AS vacancy_id, id AS current_posting_id, ''_REASON_'' AS reason, ''_PROPOSED_PROMOTION_DATE_'' AS proposed_promotion_date, ''_ADDED_BY_'' AS added_by, NOW() AS added_on, ''_ADDED_BY_'' AS last_updated_by, NOW() AS last_updated_on \r\nFROM posting \r\nWHERE postee_id=''_APPLICANT_ID_'' AND posting_end_date=''0000-00-00'' LIMIT 1)'),
(133, 'get_school_jobs', 'SELECT V.id, V.topic AS value, V.topic AS display \r\nFROM vacancy V \r\nLEFT JOIN posting P ON (P.postee_id=''_USER_ID_'' AND V.school_id=P.institution_id AND P.posting_end_date=''0000-00-00'') \r\n\r\nWHERE P.institution_id IS NOT NULL AND V.status=''published'' AND _SEARCH_QUERY_ LIMIT 100'),
(134, 'get_institution_data', 'SELECT CONCAT(I.name, '' ('', I.district, '', '', I.county, '' '', I.country, '')'') AS display, CONCAT(I.name, '' ('', I.district, '', '', I.county, '' '', I.country, '')'') AS value, I.id \r\n\r\nFROM \r\n(SELECT INS.id, INS.name, \r\n\r\nIF((SELECT name FROM district WHERE id=A.district_id LIMIT 1) IS NOT NULL, (SELECT name FROM district WHERE id=A.district_id LIMIT 1), A.district_id) AS district, \r\n\r\nA.county,\r\n\r\n(SELECT name FROM country WHERE id=A.country_id) AS country\r\n\r\nFROM institution INS \r\nLEFT JOIN address A ON (A.parent_id=INS.id AND A.parent_type=''school'') \r\nWHERE INS.status=''verified'' AND _SEARCH_QUERY_  LIMIT _LIMIT_TEXT_\r\n) I \r\n_ORDER_BY_'),
(135, 'add_transfer_application', 'INSERT INTO transfer (teacher_id, old_school_id, new_school_id, reason, proposed_date, date_added, added_by, last_updated, last_updated_by) \n\n(SELECT ''_TEACHER_ID_'' AS teacher_id, institution_id AS old_school_id, ''_NEW_SCHOOL_ID_'' AS new_school_id, ''_REASON_'' AS reason, ''_PROPOSED_DATE_'' AS proposed_date, NOW() AS date_added, ''_ADDED_BY_'' AS added_by, NOW() AS last_updated, ''_ADDED_BY_'' AS last_updated_by FROM posting WHERE postee_id=''_TEACHER_ID_'' AND posting_end_date = ''0000-00-00'' LIMIT 1)'),
(136, 'add_leave_application', 'INSERT INTO `leave` (teacher_id, 	proposed_start_date, proposed_end_date, reason, date_added, added_by, last_updated, last_updated_by) VALUES \r\n\r\n(''_TEACHER_ID_'', ''_PROPOSED_START_DATE_'', ''_PROPOSED_END_DATE_'', ''_REASON_'', NOW(), ''_ADDED_BY_'', NOW(), ''_ADDED_BY_'')'),
(137, 'get_retirement_list_data', 'SELECT R.*, CONCAT(P.last_name, '', '', P.first_name) AS teacher_name, P.file_number, \nIF(P.date_of_birth <> ''0000-00-00'', TIMESTAMPDIFF(YEAR, P.date_of_birth, CURDATE()), ''Unknown'') AS age,\n(SELECT D.name FROM duty D WHERE D.id = PS.role_id LIMIT 1) AS job\n \nFROM retirement R \nLEFT JOIN user U ON (R.retiree_id=U.id) \nLEFT JOIN person P ON (P.id=U.person_id) \nLEFT JOIN posting PS ON (PS.postee_id=R.retiree_id AND PS.posting_end_date=''0000-00-00'') \n\nWHERE _SEARCH_QUERY_ AND P.id IS NOT NULL ORDER BY _ORDER_BY_ LIMIT _LIMIT_TEXT_'),
(138, 'get_leave_list_data', 'SELECT L.*, \nCONCAT(P.last_name, '', '', P.first_name) AS teacher_name, \nI.name AS school_name,\n(SELECT D.name FROM duty D WHERE D.id = PS.role_id LIMIT 1) AS job,\nA.details AS addressline, \nA.county AS county,\n\nIF((SELECT name FROM district WHERE id=A.district_id LIMIT 1) IS NOT NULL, (SELECT name FROM district WHERE id=A.district_id LIMIT 1), A.district_id) AS district,\n\nIF((SELECT name FROM country WHERE id=A.country_id LIMIT 1) IS NOT NULL, (SELECT name FROM country WHERE id=A.country_id LIMIT 1), A.country_id) AS country  \n\nFROM `leave` L \nLEFT JOIN user U ON (U.id=L.teacher_id) \nLEFT JOIN person P ON (P.id=U.person_id) \nLEFT JOIN posting PS ON (PS.postee_id=L.teacher_id AND PS.posting_end_date=''0000-00-00'') \nLEFT JOIN institution I ON (I.id=PS.institution_id)\nLEFT JOIN address A ON (A.parent_id=I.id AND A.parent_type=''school'')\n\nWHERE _SEARCH_QUERY_ ORDER BY _ORDER_BY_ LIMIT _LIMIT_TEXT_'),
(139, 'get_transfer_list_data', 'SELECT T.*, \nCONCAT(P.last_name, '', '', P.first_name) AS teacher_name, \n\n(SELECT name FROM institution WHERE id=T.old_school_id LIMIT 1) AS current_school_name, \n\nI.name AS desired_school_name, \nA.details AS addressline, \nA.county AS county, \n(SELECT D.name FROM duty D JOIN posting PS ON (D.id=PS.role_id) WHERE PS.postee_id=T.teacher_id AND PS.institution_id=T.old_school_id ORDER BY PS.id DESC LIMIT 1) AS old_job, \n\nIF((SELECT name FROM district WHERE id=A.district_id LIMIT 1) IS NOT NULL, (SELECT name FROM district WHERE id=A.district_id LIMIT 1), A.district_id) AS district,\n\nIF((SELECT name FROM country WHERE id=A.country_id LIMIT 1) IS NOT NULL, (SELECT name FROM country WHERE id=A.country_id LIMIT 1), A.country_id) AS country   \n\nFROM transfer T \nLEFT JOIN user U ON (U.id=T.teacher_id) \nLEFT JOIN person P ON (P.id=U.person_id) \nLEFT JOIN institution I ON (T.new_school_id=I.id)\nLEFT JOIN address A ON (A.parent_id=I.id AND A.parent_type=''school'') \n\nWHERE _SEARCH_QUERY_ ORDER BY _ORDER_BY_ LIMIT _LIMIT_TEXT_'),
(140, 'get_log_list_data', 'SELECT L.*, CONCAT(P.last_name, '', '', P.first_name) AS user_name \n\nFROM `log` L \nLEFT JOIN user U ON (L.details LIKE CONCAT(''%userid='',U.id,''|%'')) \nLEFT JOIN person P ON (P.id=U.person_id) \nWHERE _SEARCH_QUERY_ ORDER BY _ORDER_BY_ LIMIT _LIMIT_TEXT_'),
(141, 'change_transfer_field', 'UPDATE transfer SET _FIELD_NAME_=''_FIELD_VALUE_'', last_updated_by=''_UPDATED_BY_'', last_updated=NOW() WHERE id=''_TRANSFER_ID_'''),
(142, 'terminate_teacher_posting', 'UPDATE posting \r\nSET posting_end_date=NOW(), last_updated=NOW(), last_updated_by=''_UPDATED_BY_'' \r\nWHERE id=''_POSTING_ID_''');
INSERT INTO query (id, code, details) VALUES
(143, 'add_plain_posting', 'INSERT INTO posting (postee_id, institution_id, posting_start_date, posting_end_date, notes, role_id, status, final_interview_id, applied_for_confirmation, date_added, added_by, last_updated, last_updated_by) VALUES \n\n(''_POSTEE_ID_'', ''_INSTITUTION_ID_'', NOW(), ''0000-00-00'', ''_NOTES_'', ''_ROLE_ID_'', ''_STATUS_'', ''_FINAL_INTERVIEW_ID_'', ''N'', NOW(), ''_ADDED_BY_'', NOW(), ''_ADDED_BY_'')'),
(144, 'remove_transfer_record', 'DELETE FROM transfer WHERE id=''_TRANSFER_ID_'''),
(145, 'change_leave_field', 'UPDATE `leave` SET _FIELD_NAME_=''_FIELD_VALUE_'', last_updated_by=''_UPDATED_BY_'', last_updated=NOW() WHERE id=''_LEAVE_ID_'''),
(146, 'remove_leave_record', 'DELETE FROM `leave` WHERE id=''_LEAVE_ID_'''),
(147, 'update_leave_dates', 'UPDATE `leave` SET actual_start_date=''_ACTUAL_START_DATE_'', actual_end_date=''_ACTUAL_END_DATE_'' WHERE id=''_LEAVE_ID_'''),
(148, 'change_retirement_field', 'UPDATE retirement SET _FIELD_NAME_=''_FIELD_VALUE_'', last_updated_by=''_UPDATED_BY_'', last_updated=NOW() WHERE id=''_RETIREMENT_ID_'''),
(149, 'remove_retirement_record', 'DELETE FROM retirement WHERE id=''_RETIREMENT_ID_'''),
(150, 'remove_transfer_application', 'DELETE FROM transfer WHERE teacher_id=''_TEACHER_ID_'' AND status=''pending'''),
(151, 'remove_leave_application', 'DELETE FROM `leave` WHERE teacher_id=''_TEACHER_ID_'' AND status=''pending'''),
(152, 'remove_retirement_application', 'DELETE FROM retirement WHERE retiree_id=''_RETIREE_ID_'' AND status=''pending'''),
(153, 'validate_system_document', 'SELECT D.*, CONCAT(P.last_name, '', '', P.first_name) AS owner_name \nFROM document D LEFT JOIN person P ON (P.id=D.parent_id AND D.parent_type=''person'') WHERE document_type=''_DOCUMENT_TYPE_'' AND tracking_number=''_TRACKING_NUMBER_'''),
(154, 'add_system_document', 'INSERT INTO document (url, document_type, tracking_number, description, parent_id, parent_type, date_added) VALUES \r\n(''_URL_'', ''_DOCUMENT_TYPE_'', ''_TRACKING_NUMBER_'', ''_DESCRIPTION_'', ''_PARENT_ID_'', ''_PARENT_TYPE_'', NOW())'),
(155, 'get_county_list_data', 'SELECT C.name, D.name AS district_name, C.name AS value, C.name AS display \r\nFROM county C \r\nLEFT JOIN district D ON (C.district_id=D.id) \r\nWHERE _SEARCH_QUERY_ ORDER BY _ORDER_BY_ LIMIT _LIMIT_TEXT_'),
(156, 'add_approved_school_data', 'INSERT INTO institution (name, \r\n\r\nstart_date, end_date, status, date_added, added_by, last_updated, \r\n\r\nlast_updated_by) VALUES (''_INSTITUTION_NAME_'', ''_START_DATE_'', \r\n\r\n''0000-00-00'', ''verified'', NOW(), ''_ADDED_BY_'', NOW(), \r\n\r\n''_ADDED_BY_'')'),
(157, 'get_schools_with_ids', 'SELECT * FROM institution WHERE id IN (_ID_LIST_)'),
(158, 'add_old_posting', 'INSERT INTO posting (postee_id, institution_id, posting_start_date, posting_end_date, notes, role_id, status, final_interview_id, applied_for_confirmation, date_added, added_by, last_updated, last_updated_by) \r\n\r\n(SELECT ''_POSTEE_ID_'' AS postee_id, ''_INSTITUTION_ID_'' AS institution_id, ''_START_DATE_'' AS posting_start_date, ''0000-00-00'' AS posting_end_date, ''_NOTES_'' AS notes, D.id AS role_id, ''_STATUS_'' AS status, ''_FINAL_INTERVIEW_ID_'' AS final_interview_id, ''_APPLIED_FOR_CONFIRMATION_'' AS applied_for_confirmation, NOW() AS date_added, ''_ADDED_BY_'' AS added_by, NOW() AS last_updated, ''_ADDED_BY_'' AS last_updated_by FROM duty D WHERE D.name=''_JOB_NAME_'' LIMIT 1)'),
(159, 'get_user_documents', 'SELECT D.* FROM document D \nLEFT JOIN user U ON (U.person_id=D.parent_id AND D.parent_type=''person'') \n\nWHERE U.id=''_USER_ID_'' AND document_type <> ''qualification_document'' \nORDER BY D.date_added DESC'),
(160, 'get_interview_board', 'SELECT B.name AS board_name, M.board_id, M.member_id, CONCAT(P.last_name, '', '', P.first_name) AS member_name, M.is_chairman \n\nFROM interview_board_member M \nLEFT JOIN interview_board B ON (B.id = M.board_id) \nLEFT JOIN user U ON (U.id=M.member_id) \nLEFT JOIN person P ON (P.id=U.person_id) \nLEFT JOIN interview I ON (I.board_id=M.board_id)\n\nWHERE I.id=''_INTERVIEW_ID_'' ORDER BY P.last_name '),
(161, 'get_board_by_id', 'SELECT * FROM interview_board WHERE id=''_BOARD_ID_'''),
(162, 'remove_board_members', 'DELETE FROM interview_board_member WHERE board_id = ''_BOARD_ID_'''),
(163, 'add_board_members', 'INSERT INTO interview_board_member (board_id, member_id, is_chairman, date_added, added_by) \r\n\r\n(SELECT ''_BOARD_ID_'' AS board_id, id AS member_id, IF(id=''_CHAIRMAN_'',''Y'',''N'') AS is_chairman, NOW() AS date_added, ''_ADDED_BY_'' AS added_by FROM user WHERE id IN (_MEMBER_IDS_))'),
(164, 'update_interview_board', 'UPDATE interview SET interviewer_id=''_INTERVIEWER_ID_'', board_id=''_BOARD_ID_'', last_updated=NOW(), last_updated_by=''_UPDATED_BY_'' WHERE id=''_INTERVIEW_ID_'''),
(165, 'add_new_board', 'INSERT INTO interview_board (name, date_added, 	added_by, last_updated, last_updated_by) VALUES \r\n(''_BOARD_NAME_'', NOW(), ''_ADDED_BY_'', NOW(), ''_ADDED_BY_'')'),
(166, 'get_list_of_boards', 'SELECT *, name AS value, name AS display FROM interview_board ORDER BY name'),
(167, 'get_board_members', 'SELECT M.board_id, M.member_id, CONCAT(P.last_name, '', '', P.first_name) AS member_name, M.is_chairman \r\n\r\nFROM interview_board_member M \r\nLEFT JOIN user U ON (U.id=M.member_id) \r\nLEFT JOIN person P ON (P.id=U.person_id) \r\n\r\nWHERE M.board_id=''_BOARD_ID_'' ORDER BY P.last_name '),
(168, 'get_approval_list_data', 'SELECT \nDISTINCT IF(A.chain_type=''data'', CONCAT(A.chain_type,'' ('', LEFT(A.subject_id,LOCATE(''|'',A.subject_id) - 1), '')''), \n\nA.chain_type) AS item_name, \n\nA.subject_id, \n\n(SELECT CASE A.chain_type \n   WHEN ''registration'' THEN (SELECT CONCAT(P.last_name, '', '', P.first_name) FROM user U LEFT JOIN person P \n\nON (U.person_id=P.id) WHERE U.id=A.subject_id LIMIT 1) \n\n   WHEN ''vacancy'' THEN (SELECT CONCAT(V.topic, '' ('', (SELECT name FROM institution WHERE \n\nid=V.school_id),'')'') FROM vacancy V WHERE V.id=A.subject_id LIMIT 1) \n\n   WHEN ''transfer'' THEN (SELECT CONCAT(''FOR '', P.last_name, '', '', P.first_name, '' FROM '', (SELECT name \n\nFROM institution WHERE id=T.old_school_id), '' TO '', (SELECT name FROM institution WHERE \n\nid=T.new_school_id)) FROM transfer T WHERE T.id=A.subject_id LIMIT 1) \n\n   WHEN ''confirmation'' THEN (SELECT CONCAT((SELECT CONCAT(P.last_name, '', '', P.first_name) FROM user U \n\nLEFT JOIN person P ON (U.person_id=P.id) WHERE U.id=PS.postee_id LIMIT 1), '' ('', (SELECT name FROM \n\ninstitution WHERE id=PS.institution_id),'')'') FROM posting PS WHERE PS.id=A.subject_id LIMIT 1) \n\n   WHEN ''retirement'' THEN (SELECT CONCAT(P.last_name, '', '', P.first_name) FROM user U LEFT JOIN \n\nperson P ON (U.person_id=P.id) WHERE U.id=A.subject_id LIMIT 1) \n\n   WHEN ''leave'' THEN (SELECT (SELECT CONCAT(P.last_name, '', '', P.first_name) FROM user U LEFT JOIN person \n\nP ON (U.person_id=P.id) WHERE U.id=L.teacher_id) FROM `leave` L WHERE L.id=A.subject_id LIMIT 1) \n\n   WHEN ''data'' THEN (SELECT \n      IF(LEFT(A.subject_id,LOCATE(''|'',A.subject_id) - 1) = ''school'', (SELECT name FROM institution WHERE \n\nid=SUBSTRING_INDEX(A.subject_id,''|'',-1)), \n      ''Other Data''\n      ) LIMIT 1) \n\n   ELSE ''Other''\nEND) AS subject, \n\n(SELECT GROUP_CONCAT(CONCAT(''['',A2.step_number,''] '', P2.last_name, '', '', P2.first_name, '' ON '', \n\nDATE_FORMAT(A2.date_created, "%d-%b-%Y %h:%i%p"), ''    '') SEPARATOR '' &#10148; '') \nFROM approval_chain A2 \nLEFT JOIN user U2 ON (U2.id=A2.actual_approver)\nLEFT JOIN person P2 ON (U2.person_id=P2.id)\nWHERE A2.subject_id=A.subject_id AND A2.chain_type=A.chain_type \nORDER BY A2.step_number) AS approval_chain, \n\n\n(SELECT MAX(A1.last_updated) FROM approval_chain A1 WHERE A1.subject_id=A.subject_id AND \n\nA1.chain_type=A.chain_type) AS last_updated\n\nFROM approval_chain A \nLEFT JOIN user U ON (U.id=A.actual_approver)\nLEFT JOIN person P ON (P.id=U.person_id)\nWHERE _SEARCH_QUERY_ ORDER BY _ORDER_BY_ LIMIT _LIMIT_TEXT_\n'),
(169, 'add_user_document', 'INSERT INTO document (url, document_type, tracking_number, description, is_removable, parent_id, parent_type, date_added) VALUES \r\n(''_URL_'', ''_DOCUMENT_TYPE_'', ''_TRACKING_NUMBER_'', ''_DESCRIPTION_'', ''_IS_REMOVABLE_'', ''_PARENT_ID_'', ''_PARENT_TYPE_'', NOW())'),
(170, 'delete_user_document_by_url', 'DELETE FROM document WHERE url=''_URL_'' AND is_removable=''Y'''),
(171, 'get_teacher_documents', 'SELECT id AS document_id, url AS documenturl, description AS documentname, tracking_number, is_removable \nFROM document \nWHERE document_type=''qualification_document'' AND parent_id=''_PERSON_ID_'' AND parent_type=''person'' \nORDER BY date_added ASC '),
(172, 'update_document_field', 'UPDATE document SET _FIELD_NAME_=''_FIELD_VALUE_'' WHERE id=''_DOCUMENT_ID_'''),
(173, 'update_document_owner', 'UPDATE document SET parent_id=''_ACTUAL_ID_'' WHERE parent_type=''person'' AND parent_id=''_TEMP_ID_'''),
(174, 'disable_document_editing', 'UPDATE document SET is_removable=''N'' WHERE parent_id=''_PERSON_ID_'' AND parent_type=''person'''),
(175, 'get_teacher_payroll_data', 'SELECT P.file_number,  \n\n(SELECT id_value FROM other_user_id WHERE parent_id=P.id AND parent_type=''person'' AND id_type=''teacher_id'' LIMIT 1) AS uts_number, \n\nP.first_name, P.last_name, \n\nCONCAT(P.last_name, '', '', P.first_name) AS name, \n\nIF(P.date_of_birth <> ''0000-00-00'', DATE_FORMAT(P.date_of_birth, "%d-%b-%Y"), ''Unknown'') AS date_of_birth, \n\n(SELECT D.name FROM posting PS LEFT JOIN duty D ON (PS.role_id=D.id) WHERE (PS.posting_end_date=''0000-00-00'' OR PS.posting_end_date=(SELECT MAX(posting_end_date) FROM posting PS1 WHERE PS1.postee_id=PS.postee_id)) AND PS.postee_id=U.id ORDER BY PS.posting_end_date ASC LIMIT 1) AS title, \n\n(SELECT D.salary_scale FROM posting PS LEFT JOIN duty D ON (PS.role_id=D.id) WHERE (PS.posting_end_date=''0000-00-00'' OR PS.posting_end_date=(SELECT MAX(posting_end_date) FROM posting PS1 WHERE PS1.postee_id=PS.postee_id)) AND PS.postee_id=U.id ORDER BY PS.posting_end_date ASC LIMIT 1) AS salary_scale, \n\n(SELECT DATE_FORMAT(D.date_added, "%d-%b-%Y") FROM document D WHERE D.document_type=''confirmation_letter'' AND D.parent_id=P.id AND D.parent_type=''person'' LIMIT 1) AS date_of_confirmation, \n\n(SELECT DATE_FORMAT(PS.posting_start_date, "%d-%b-%Y") FROM posting PS WHERE PS.postee_id=U.id AND PS.status NOT IN (''saved'', ''reversed'') ORDER BY PS.posting_start_date ASC LIMIT 1) AS first_appointment_date, \n\n(SELECT DATE_FORMAT(PS.posting_start_date, "%d-%b-%Y") FROM posting PS WHERE (PS.posting_end_date=''0000-00-00'' OR PS.posting_end_date=(SELECT MAX(posting_end_date) FROM posting PS1 WHERE PS1.postee_id=PS.postee_id)) AND PS.postee_id=U.id ORDER BY PS.posting_end_date ASC LIMIT 1) AS current_appointment_date, \n\n(SELECT CASE U.teacher_status \nWHEN ''completed'' THEN ''SUBMITTED''  \nWHEN ''pending'' THEN ''ISSUED FILENUMBER'' \nWHEN ''approved'' THEN ''ISSUED CERTIFICATE'' \nWHEN ''active'' THEN ''ACTIVE'' \nWHEN ''archived'' THEN ''RETIRED'' \nELSE ''UNKNOWN'' END) AS teacher_status, \n\n(SELECT CONCAT(''CERTIFICATES: '', GROUP_CONCAT(CONCAT(H.certificate_name,'' ('',H.institution,'')'')  SEPARATOR '', ''), '' SUBJECTS: '', (SELECT GROUP_CONCAT(CONCAT(S.details,'' ('',S.study_category,'')'')  SEPARATOR '', '') FROM subject S WHERE S.parent_id=H.person_id AND S.parent_type=''person'')) FROM academic_history H WHERE H.person_id=P.id) AS qualifications, \n\nIF((SELECT id FROM retirement WHERE retiree_id=U.id LIMIT 1) IS NOT NULL, \n(SELECT IF(confirmed_date <> ''0000-00-00'', DATE_FORMAT(confirmed_date, "%d-%b-%Y"), DATE_FORMAT(proposed_date, "%d-%b-%Y")) FROM retirement WHERE retiree_id=U.id LIMIT 1), \nIF(P.date_of_birth <> ''0000-00-00'', (SELECT DATE_FORMAT(DATE_ADD(P.date_of_birth,INTERVAL 60 YEAR), "%d-%b-%Y")), ''UNKNOWN'')\n) AS proposed_retirement, \n\nIF((SELECT id FROM retirement WHERE retiree_id=U.id LIMIT 1) IS NOT NULL, \n(SELECT CONCAT(''DATE: '', IF(confirmed_date <> ''0000-00-00'', DATE_FORMAT(confirmed_date, "%d-%b-%Y"), DATE_FORMAT(proposed_date, "%d-%b-%Y")),'' REASON: '', retiree_reason) FROM retirement WHERE retiree_id=U.id LIMIT 1), \nIF(P.date_of_birth <> ''0000-00-00'', (SELECT CONCAT(DATE_FORMAT(DATE_ADD(P.date_of_birth,INTERVAL 60 YEAR), "%d-%b-%Y"),'' (AMAR)'')), ''UNKNOWN'')\n) AS retirement_status\n\nFROM user U \nLEFT JOIN person P ON (P.id=U.person_id) \n\nWHERE (U.permission_group_id=''2'' OR U.permission_group_id = ''1'') \nAND _SEARCH_QUERY_ _ORDER_BY_ LIMIT _LIMIT_TEXT_'),
(176, 'get_teacher_cim_data', 'SELECT P.file_number, \r\n\r\n(SELECT id_value FROM other_user_id WHERE parent_id=P.id AND parent_type=''person'' AND id_type=''teacher_id'' LIMIT 1) AS uts_number, \r\n\r\nP.first_name, P.last_name, \r\n\r\nCONCAT(P.last_name, '', '', P.first_name) AS name, \r\n\r\n(SELECT D.name FROM posting PS LEFT JOIN duty D ON (PS.role_id=D.id) WHERE (PS.posting_end_date=''0000-00-00'' OR PS.posting_end_date=(SELECT MAX(posting_end_date) FROM posting PS1 WHERE PS1.postee_id=PS.postee_id)) AND PS.postee_id=U.id ORDER BY PS.posting_end_date ASC LIMIT 1) AS title, \r\n\r\n(SELECT GROUP_CONCAT(CONCAT(R.notes,'' ('',R.code,'')'') SEPARATOR '', '')\r\nFROM census C \r\nLEFT JOIN census_responsibility CR ON (CR.census_id=C.id) \r\nLEFT JOIN responsibility R ON (CR.responsibility_id=R.id)\r\nWHERE C.status=''active'' AND C.teacher_id=U.id ORDER BY C.date_added DESC LIMIT 1) AS responsibility, \r\n\r\n(SELECT D.name FROM posting PS LEFT JOIN duty D ON (PS.role_id=D.id) WHERE PS.status=''saved'' AND PS.postee_id=U.id ORDER BY PS.last_updated DESC LIMIT 1) AS substantive_post, \r\n\r\nIF(P.date_of_birth <> ''0000-00-00'', DATE_FORMAT(P.date_of_birth, "%d-%b-%Y"), ''Unknown'') AS date_of_birth, \r\n\r\n(SELECT DATE_FORMAT(D.date_added, "%d-%b-%Y") FROM document D WHERE D.document_type=''confirmation_letter'' AND D.parent_id=P.id AND D.parent_type=''person'' LIMIT 1) AS date_of_confirmation, \r\n\r\n(SELECT (SELECT CONCAT(A.details, '' '', A.county, '' '', (SELECT name FROM district WHERE id=A.district_id LIMIT 1), '', '', (SELECT name FROM country WHERE id=A.country_id LIMIT 1)) \r\nFROM address A \r\nWHERE A.parent_id=PS.institution_id AND A.parent_type=''school'' AND A.is_primary=''Y'') \r\nFROM posting PS WHERE (PS.posting_end_date=''0000-00-00'' OR PS.posting_end_date=(SELECT MAX(posting_end_date) FROM posting PS1 WHERE PS1.postee_id=PS.postee_id)) AND PS.postee_id=U.id ORDER BY PS.posting_end_date ASC LIMIT 1) AS location, \r\n\r\n(SELECT (SELECT name FROM institution WHERE id=PS.institution_id) FROM posting PS WHERE (PS.posting_end_date=''0000-00-00'' OR PS.posting_end_date=(SELECT MAX(posting_end_date) FROM posting PS1 WHERE PS1.postee_id=PS.postee_id)) AND PS.postee_id=U.id ORDER BY PS.posting_end_date ASC LIMIT 1) AS school, \r\n\r\n(SELECT (SELECT school_type FROM institution WHERE id=PS.institution_id) FROM posting PS WHERE (PS.posting_end_date=''0000-00-00'' OR PS.posting_end_date=(SELECT MAX(posting_end_date) FROM posting PS1 WHERE PS1.postee_id=PS.postee_id)) AND PS.postee_id=U.id ORDER BY PS.posting_end_date ASC LIMIT 1) AS school_type, \r\n\r\n(SELECT GROUP_CONCAT(S.details SEPARATOR '', '') FROM subject S WHERE S.study_category=''Major'' AND S.parent_id=P.id AND S.parent_type=''person'') AS subjects_major, \r\n\r\n(SELECT GROUP_CONCAT(S.details SEPARATOR '', '') FROM subject S WHERE S.study_category=''Minor'' AND S.parent_id=P.id AND S.parent_type=''person'') AS subjects_minor, \r\n\r\n(SELECT GROUP_CONCAT(S.details SEPARATOR '', '') FROM subject S WHERE S.study_category=''Other'' AND S.parent_id=P.id AND S.parent_type=''person'') AS subjects_other, \r\n\r\n(SELECT DATE_FORMAT(PS.posting_start_date, "%d-%b-%Y") FROM posting PS WHERE PS.postee_id=U.id AND PS.status NOT IN (''saved'', ''reversed'') ORDER BY PS.posting_start_date ASC LIMIT 1) AS first_appointment_date, \r\n\r\n(SELECT DATE_FORMAT(PS.last_updated, "%d-%b-%Y") FROM posting PS WHERE (PS.posting_end_date=''0000-00-00'' OR PS.posting_end_date=(SELECT MAX(posting_end_date) FROM posting PS1 WHERE PS1.postee_id=PS.postee_id)) AND PS.postee_id=U.id AND PS.status <> ''saved'' ORDER BY PS.posting_end_date ASC LIMIT 1) AS posting_date, \r\n\r\n(SELECT DATE_FORMAT(PS.posting_start_date, "%d-%b-%Y") FROM posting PS WHERE (PS.posting_end_date=''0000-00-00'' OR PS.posting_end_date=(SELECT MAX(posting_end_date) FROM posting PS1 WHERE PS1.postee_id=PS.postee_id)) AND PS.postee_id=U.id AND PS.status <> ''saved'' ORDER BY PS.posting_end_date ASC LIMIT 1) AS current_appointment_date, \r\n\r\n(SELECT CASE U.teacher_status \r\nWHEN ''completed'' THEN ''SUBMITTED''  \r\nWHEN ''pending'' THEN ''ISSUED FILENUMBER'' \r\nWHEN ''approved'' THEN ''ISSUED CERTIFICATE'' \r\nWHEN ''active'' THEN ''ACTIVE'' \r\nWHEN ''archived'' THEN ''RETIRED'' \r\nELSE ''UNKNOWN'' END) AS teacher_status, \r\n\r\n(SELECT CONCAT(''CERTIFICATES: '', GROUP_CONCAT(CONCAT(H.certificate_name,'' ('',H.institution,'')'')  SEPARATOR '', '') ) FROM academic_history H WHERE H.person_id=P.id) AS qualifications, \r\n\r\nIF((SELECT id FROM retirement WHERE retiree_id=U.id LIMIT 1) IS NOT NULL, \r\n(SELECT IF(confirmed_date <> ''0000-00-00'', DATE_FORMAT(confirmed_date, "%d-%b-%Y"), DATE_FORMAT(proposed_date, "%d-%b-%Y")) FROM retirement WHERE retiree_id=U.id LIMIT 1), \r\nIF(P.date_of_birth <> ''0000-00-00'', (SELECT DATE_FORMAT(DATE_ADD(P.date_of_birth,INTERVAL 60 YEAR), "%d-%b-%Y")), ''UNKNOWN'')\r\n) AS proposed_retirement, \r\n\r\nIF((SELECT id FROM retirement WHERE retiree_id=U.id LIMIT 1) IS NOT NULL, \r\n(SELECT CONCAT(''DATE: '', IF(confirmed_date <> ''0000-00-00'', DATE_FORMAT(confirmed_date, "%d-%b-%Y"), DATE_FORMAT(proposed_date, "%d-%b-%Y")),'' REASON: '', retiree_reason) FROM retirement WHERE retiree_id=U.id LIMIT 1), \r\nIF(P.date_of_birth <> ''0000-00-00'', (SELECT CONCAT(DATE_FORMAT(DATE_ADD(P.date_of_birth,INTERVAL 60 YEAR), "%d-%b-%Y"),'' (AMAR)'')), ''UNKNOWN'')\r\n) AS retirement_status\r\n\r\nFROM user U \r\nLEFT JOIN person P ON (P.id=U.person_id) \r\n\r\nWHERE (U.permission_group_id=''2'' OR U.permission_group_id = ''1'') \r\nAND _SEARCH_QUERY_ _ORDER_BY_ LIMIT _LIMIT_TEXT_\r\n'),
(177, 'get_board_chairman', 'SELECT B.name AS board_name, M.board_id, M.member_id AS chairman_id, \n(SELECT CONCAT(P.last_name, '', '', P.first_name) FROM user U LEFT JOIN person P ON (P.id=U.person_id) WHERE U.id=M.member_id) AS chairman_name\n\nFROM interview_board_member M \nLEFT JOIN interview_board B ON (B.id = M.board_id)\nWHERE B.id=''_BOARD_ID_'' \nORDER BY CAST(M.is_chairman AS CHAR) DESC, M.date_added ASC LIMIT 1'),
(178, 'record_multiple_interviews', 'INSERT IGNORE INTO interview (application_id, interviewer_id, board_id, planned_date, interview_date, date_added, added_by, last_updated, last_updated_by) \n\n(SELECT A.id AS application_id, ''_INTERVIEWER_ID_'' AS interviewer_id, ''_BOARD_ID_'' AS board_id, ''_PLANNED_DATE_'' AS planned_date, ''_PLANNED_DATE_'' AS interview_date, NOW() AS date_added, ''_ADDED_BY_'' AS added_by, NOW() AS last_updated, ''_ADDED_BY_'' AS last_updated_by FROM application A WHERE A.id IN (_APPLICATION_IDS_))'),
(179, 'get_application_list_data', 'SELECT DISTINCT A.id AS application_id, \r\nA.user_id AS applicant_id, \r\nA.date_added AS submission_date, \r\n\r\n(SELECT CONCAT(P.last_name, '', '', P.first_name) FROM user U LEFT JOIN person P ON (U.person_id=P.id) WHERE U.id=A.user_id LIMIT 1) AS applicant_name, \r\n\r\n(SELECT I.name FROM vacancy V LEFT JOIN institution I ON (V.school_id=I.id) WHERE A.vacancy_id=V.id LIMIT 1) AS institution_name\r\n\r\nFROM application A \r\nWHERE A.id IN (_APPLICATION_IDS_)'),
(180, 'report_stat_registerednumbers_by_gender', 'SELECT \r\n(SELECT COUNT(U1.id) FROM user U1 LEFT JOIN person P1 ON (U1.person_id=P1.id) WHERE U1.permission_group_id=''2'' AND U1.teacher_status IN (''approved'',''active'') AND P1.gender=''male'') AS Male, \r\n\r\n(SELECT COUNT(U1.id) FROM user U1 LEFT JOIN person P1 ON (U1.person_id=P1.id) WHERE  U1.permission_group_id=''2'' AND U1.teacher_status IN (''approved'',''active'') AND P1.gender=''female'') AS Female,\r\n\r\n(SELECT COUNT(U1.id) FROM user U1 LEFT JOIN person P1 ON (U1.person_id=P1.id) WHERE  U1.permission_group_id=''2'' AND U1.teacher_status IN (''approved'',''active'') AND P1.gender=''unknown'') AS Unknown'),
(181, 'report_stat_registerednumbers_by_grade', 'SELECT \nCONCAT(G.name, '' ('',G.code,'')'') AS Grade, \n\n(SELECT COUNT(U.id) FROM user U \nLEFT JOIN document D ON (U.person_id=D.parent_id AND D.parent_type=''person'') \nWHERE D.tracking_number LIKE CONCAT(G.number,''%'') AND D.document_type=''registration_certificate'') AS Teachers \n\nFROM grade G \nORDER BY number'),
(182, 'report_stat_registerednumbers_by_subject', 'SELECT DISTINCT S.details AS Subject, \r\n\r\n(SELECT COUNT(U.id) FROM user U \r\n LEFT JOIN subject S1 ON (U.person_id=S1.parent_id AND S1.parent_type=''person'') WHERE U.teacher_status IN (''approved'',''active'') AND S1.details=S.details) AS Teachers \r\n\r\nFROM subject S ORDER BY S.details ASC'),
(183, 'report_stat_registerednumbers_by_school', 'SELECT \nCONCAT(I.name, '' - '', I.school_type) AS field, \n(SELECT COUNT(DISTINCT PS.postee_id) FROM posting PS WHERE (PS.posting_end_date=''0000-00-00'' OR DATE(PS.posting_end_date) > NOW()) AND PS.institution_id=I.id AND PS.status <> ''reversed'') AS value \n\nFROM institution I \nWHERE I.status=''verified'' \nHAVING value > 0'),
(184, 'report_stat_registerednumbers_by_district', 'SELECT D.name AS field, \n\n(SELECT COUNT(DISTINCT PS.postee_id) \nFROM posting PS \nLEFT JOIN address A ON (A.parent_id=PS.institution_id AND A.parent_type=''school'')\nWHERE (PS.posting_end_date=''0000-00-00'' OR DATE(PS.posting_end_date) > NOW()) AND PS.status <> ''reversed'' AND A.district_id=D.id\n) AS value\n\nFROM district D \nORDER BY D.name ASC'),
(185, 'report_stat_registerednumbers_by_region', 'SELECT DISTINCT D.region AS Region, \r\n(SELECT COUNT(DISTINCT PS.postee_id) \r\nFROM posting PS\r\nLEFT JOIN address A ON (A.parent_id = PS.institution_id AND A.parent_type = ''school'') \r\nLEFT JOIN district D1 ON (A.district_id = D1.id)\r\nWHERE (PS.posting_end_date = ''0000-00-00'' OR DATE(PS.posting_end_date) > NOW())\r\nAND PS.status <> ''reversed''\r\nAND D1.region=D.region) AS Teachers\r\n\r\nFROM district D\r\nORDER BY D.region ASC '),
(186, 'report_stat_teacherappointments_by_post', 'SELECT D.name AS Post, \r\n\r\n(SELECT COUNT(DISTINCT PS.postee_id) FROM posting PS \r\nWHERE PS.role_id=D.id AND PS.status <> ''reversed''\r\nAND (PS.posting_start_date BETWEEN DATE(''_START_DATE_'') AND DATE(''_END_DATE_''))) AS Teachers\r\n\r\nFROM duty D \r\nORDER BY D.name '),
(187, 'report_stat_teacherappointments_by_school', 'SELECT DISTINCT (SELECT I.name FROM institution I WHERE I.id=PS.institution_id) AS field, \n\n(SELECT COUNT(DISTINCT PS1.postee_id) FROM posting PS1 WHERE PS1.institution_id = PS.institution_id AND PS1.status <> ''reversed'' AND (PS1.posting_start_date BETWEEN DATE(''_START_DATE_'') AND DATE(''_END_DATE_''))) AS value\n\nFROM posting PS \nWHERE PS.status <> ''reversed'' \nAND (PS.posting_start_date BETWEEN DATE(''_START_DATE_'') AND DATE(''_END_DATE_''))\n\nORDER BY field'),
(188, 'report_stat_teacherappointments_by_district', 'SELECT D.name AS field, \n\n(SELECT COUNT(DISTINCT PS.postee_id) FROM posting PS \nLEFT JOIN address A ON (A.parent_id=PS.institution_id AND A.parent_type=''school'')\nWHERE A.district_id=D.id AND PS.status <> ''reversed''\nAND (PS.posting_start_date BETWEEN DATE(''_START_DATE_'') AND DATE(''_END_DATE_''))) AS value\n\nFROM district D \nORDER BY D.name '),
(189, 'report_stat_teacherappointments_by_region', 'SELECT DISTINCT D.region AS Region, \r\n\r\n(SELECT COUNT(DISTINCT PS.postee_id) FROM posting PS \r\nLEFT JOIN address A ON (A.parent_id=PS.institution_id AND A.parent_type=''school'') \r\nLEFT JOIN district D1 ON (A.district_id=D1.id)\r\nWHERE D1.region=D.region AND PS.status <> ''reversed''\r\nAND (PS.posting_start_date BETWEEN DATE(''_START_DATE_'') AND DATE(''_END_DATE_''))) AS Teachers\r\n\r\nFROM district D \r\nORDER BY D.region '),
(190, 'report_stat_teacherstatus_applied', 'SELECT ''Teachers Who Submitted Their Application:'' AS Label,\n(SELECT COUNT(id) FROM user WHERE permission_group_id=''2'' AND teacher_status=''completed'') AS `Count`'),
(191, 'report_stat_teacherstatus_on_probation', 'SELECT ''Teachers On Probation:'' AS Label,\n(SELECT COUNT(DISTINCT PS.postee_id) FROM posting PS WHERE PS.status IN (''saved'',''pending'') AND (PS.posting_end_date=''0000-00-00'' OR DATE(PS.posting_end_date) > NOW()) ) AS Count'),
(192, 'report_stat_teacherstatus_confirmed', 'SELECT ''Teachers Confirmed:'' AS Label,\r\n(SELECT COUNT(DISTINCT PS.postee_id) FROM posting PS WHERE PS.status IN (''confirmed'') AND (PS.posting_end_date=''0000-00-00'' OR DATE(PS.posting_end_date) > NOW()) ) AS Count'),
(193, 'report_stat_teacherstatus_on_leave', 'SELECT ''Teachers On Leave:'' AS Label,\n(SELECT COUNT(DISTINCT L.teacher_id) FROM `leave` L WHERE L.status =''confirmed'' AND NOW() BETWEEN DATE(L.actual_start_date) AND DATE(L.actual_end_date)) AS `Count`'),
(194, 'report_stat_teacherstatus_retired', 'SELECT ''Teachers Who Retired:'' AS Label,\r\n(SELECT COUNT(id) FROM user WHERE permission_group_id=''2'' AND teacher_status=''archived'') AS `Count`');